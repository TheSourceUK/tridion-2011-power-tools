#Step-by-step instructions for people who know what they're doing

=No-nonsense guide to creating a power tool=

1.	Get the latest power tools code from https://tridion-2011-power-tools.googlecode.com/svn/trunk/ (or use http:// instead for the read-only version of it)

2.	Fix the references for PowerTools2011.Editor and PowerTools2011.Common:
*	[TRIDION]\Web\WebUI\WebRoot\bin\Tridion.Web.UI.Core.dll
*	PowerTools2011.Common\CoreService\Tridion.ContentManager.CoreService.Client.2010.dll

3.	Add the following post-build event to PowerTools2011.Editor:
{{{
xcopy "$(TargetDir)*.dll" "%TRIDION_CM_HOME%\Web\WebUI\WebRoot\bin" /y
xcopy "$(TargetDir)*.pdb" "%TRIDION_CM_HOME%\Web\WebUI\WebRoot\bin" /y
}}}

4.	Build PowerTools2011.Editor

5.	Edit Tridion.ContentManager.Config and add the PowerTools Editor configuration (copy from Editor.Fragment.Config, correct the path)

6.	Create a Virtual Directory in IIS pointing to PowerTools2001 – Editor folder

7.	Create a copy of the “ImageUploader” Power Tool (copy the PowerTools\Client\ImageUploader folder to a folder named "PublicationInfo")

8.	Rename all files inside this folder to PublicationInfo* (replacing ImageUploader)

9.	Edit the PublicationInfo.aspx file:
{{{
<%@ Page Title="" Language="C#" MasterPageFile="../Shared/Views/PopUp.Master" AutoEventWireup="true"
    CodeBehind="PublicationInfo.aspx.cs" Inherits="PowerTools2011.Editor.PowerTools.Client.PublicationInfo.PublicationInfo" %>

<asp:Content ID="PublicationInfo" ContentPlaceHolderID="Main" runat="server">
    <h1>
        Publication Info</h1>
    <div class="tool-explanation">
        This tool will get you a list of publications currently on the server.
    </div>
    <hr />
    <div>
        <c:button id="ExecuteButton" runat="server" label="Get List of Publications" class="customButton" />
    </div>
    <div id="PublicationList">
    </div>
</asp:Content>
}}}
10.	Edit the PublicationInfo.aspx.cs file
{{{
using System;
using Tridion.Web.UI.Core.Controls;
using Tridion.Web.UI.Controls;
using PowerTools2011.Common.Pages;

namespace PowerTools2011.Editor.PowerTools.Client.PublicationInfo
{
    [ControlResourcesDependency(new Type[] { typeof(Popup), typeof(Button), typeof(Stack) })]
    [ControlResources("PowerTools2011.PublicationInfo")]
    public class PublicationInfo : PowerToolsPageBase
    {
    }
}
}}}

11.	Edit the PublicationInfo.js file

  * Find/Replace “ImageUploader” ==> “PublicationInfo”
  * comment line 29 (c.SchemaControl …)
  * comment line 31 ($evt.addEventHandler(c.SchemaControl …)
  * comment lines 45 to 51 (related to params)
  * replace params with null on line 58
  * comment lines 88 to 108 (onSchemaLoadContent function)
  * comment lines 109 to 116 (getListFieldsSchemas function)

12.	Edit the PublicationInfoCommand.js file

  * Find/Replace “ImageUploader” ==> “PublicationInfo”
  * Change isAvailable and isEnabled to always return true
  * Comment lines 20 to 23
  * Remove “+"#folderId=" + uriSelection” from line 25

13.	Edit PublicationInfoServiceProxy.js file

  * Find/Replace “ImageUploader” ==> PublicationInfo

14.	Create the icons for the PowerTool
  * Go to http://openiconlibrary.sourceforge.net/gallery2/?./Icons/actions/db_status.png 
  * Save the 16x16 and 32x32 files under PowerTools2011.Editor\PowerTools\Client\Shared\Theme\Icons, rename them to publicationinfo_16.png and publicationinfo_32.png

15.	Edit PowerTools2011.Editor\PowerTools\Client\Shared\Theme\styles.css
  * Copy the following 3 lines to this CSS

{{{
.PT_PublicationInfo .image {background-image:url({ThemePath}/Icons/publicationinfo_16.png);}
.ribbontoolbar .button.PT_PublicationInfo .image {background-image: url({ThemePath}/Icons/publicationinfo_32.png);} 
.ribbontoolbar.minimized .button.PT_PublicationInfo .image {background-image: url({ThemePath}/Icons/publicationinfo_16.png);} 
}}}

16.	Edit PowerTools2011.Editor\Configuration\Editor.config
  * Create a cfg:group for this PowerTool
{{{
      <cfg:group name="PowerTools2011.PublicationInfo" merge="always">
        <cfg:fileset>
          <cfg:file type="style">/PowerTools/Client/PublicationInfo/PublicationInfo.css</cfg:file>
          <cfg:file type="script">/PowerTools/Client/PublicationInfo/PublicationInfoServiceProxy.js</cfg:file>
          <cfg:file type="script">/PowerTools/Client/PublicationInfo/PublicationInfo.js</cfg:file>
        </cfg:fileset>
        <cfg:dependencies>
          <cfg:dependency>Tridion.Web.UI.Editors.CME</cfg:dependency>
          <cfg:dependency>Tridion.Web.UI.Editors.CME.commands</cfg:dependency>
          <cfg:dependency>PowerTools2011.Resources.Base</cfg:dependency>
        </cfg:dependencies>
      </cfg:group>
}}}
  * Register the command for this power tool
{{{
<cfg:file type="script">/PowerTools/Client/PublicationInfo/PublicationInfoCommand.js</cfg:file>
}}}
  * Create the extension element for this power tool
{{{
            <!-- PublicationInfo PowerTool -->
            <ext:extension assignid="PublicationInfo" name="Publication&lt;br/&gt;Info" pageid="PowerTools 2012" groupid="Tools">
              <ext:command>PT_PublicationInfo</ext:command>
              <ext:title>Publication Info</ext:title>
              <ext:issmallbutton>false</ext:issmallbutton>
              <ext:dependencies>
                <cfg:dependency>PowerTools2011.Commands</cfg:dependency>
              </ext:dependencies>
              <ext:apply>
                <ext:view name="DashboardView" />
              </ext:apply>
            </ext:extension>
}}}
  * Configure the Command set
{{{
<cfg:command name="PT_PublicationInfo" implementation="PowerTools2011.Commands.PublicationInfo"/>
}}}

Rebuild the PowerTools2011.Editor project.

Save & Reload the CME, you should now see your new button in the PowerTools 2012 Ribbon toolbar, and clicking it will bring up the popup.

